{"version":3,"file":"static/webpack/static/development/pages/_app.js.b8b5427a920449c614db.hot-update.js","sources":["webpack:///./components/Sidebar.js"],"sourcesContent":["import { SideNav, SideNavItem } from \"@react/react-spectrum/SideNav\";\n\nimport Button from \"@react/react-spectrum/Button\";\nimport Link from \"next/link\";\nimport Logo from \"./Logo\";\nimport Router from \"next/router\";\nimport ShowMenu from \"@react/react-spectrum/Icon/ShowMenu\";\nimport SiteSearch from \"./SiteSearch\";\nimport classNames from \"classnames\";\nimport getConfig from \"next/config\";\nimport menuData from \"../data/newmenu\";\nimport styles from \"./css/sidebar.scss\";\nimport { withRouter } from \"next/router\";\n\nconst createLinkProps = item => {\n  if (item.linkType === \"External\") {\n    return { href: item.url };\n  }\n  if (item.parent.split(\",\").includes(\"Components\")) {\n    return {\n      href: `/components/id?id=${item.url}`,\n      as: `${process.env.BACKEND_URL}/components/${item.url}`\n    };\n  }\n  return { href: `/${item.url}`, as: `${process.env.BACKEND_URL}/${item.url}` };\n};\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectedItem = React.createRef();\n    this.state = {\n      menuOpen: false\n    };\n  }\n  componentDidMount() {\n    const scaleMQL = window.matchMedia('(max-width: 960px)');\n    scaleMQL.addListener(this.updateDimensions.bind(this));\n    Router.events.on('routeChangeComplete',this.closeMenu)\n  }\n  componentWillReceiveProps(nextProps) {\n    const selected = menuData.key.find(item => {\n      return item.url === nextProps.router.query.id;\n    });\n    this.search = React.createRef();\n    if (selected) {\n      const selectedParentSlug = selected.parent.split(\",\").find(item => {\n        return item !== \"top-level-menu-item\" && item !== \"WebsiteMenu\";\n      });\n      const selectedParent = menuData.key.find(item => {\n        return item.title === selectedParentSlug;\n      });\n      if (selectedParent) {\n        selectedParent.defaultExpanded = true;\n      }\n    }\n  }\n  updateDimensions(e) {\n    if(!e.currentTarget.matches) {\n      this.closeMenu();\n    }\n  }\n  openMenu() {\n    this.setState({\n      menuOpen: true\n    });\n  };\n  closeMenu() {\n    this.search.current.setState({\n      menuOpen: false\n    });\n    this.setState({\n      menuOpen: false\n    });\n  };\n\n  render() {\n    let sidebarWidth = '208px';\n\n    return (\n      <>\n        <div\n          className={classNames(\n            styles.overlay,\n            this.state.menuOpen ? styles.menuOpen : styles.menuClosed\n          )}\n          onClick={() => this.closeMenu()}\n        ></div>\n        <div className={styles.appHeader}>\n          <Button\n            variant=\"tool\"\n            icon={<ShowMenu />}\n            aria-label=\"Show\"\n            onClick={() => this.openMenu()}\n          />\n        </div>\n        <div\n          className={classNames(\n            styles.sideBar,\n            this.state.menuOpen ? styles.menuOpen : styles.menuClosed\n          )}\n        >\n          <div className={classNames(styles.spectrumSidebar)}>\n            <div className={styles.header}>\n              <Logo/>\n\n              <SiteSearch ref={this.search} />\n            </div>\n\n            <div className={styles.navigation}>\n              <SideNav\n                defaultValue={this.props.router.query.id}\n                style={{ width: sidebarWidth, marginBottom: 80 }}\n                variant=\"multiLevel\"\n              >\n                {menuData.menu[0].children.map((item, i) => {\n                  if (!item.children || item.children.length == 0) {\n                    return (\n                      <SideNavItem\n                        value={item.url}\n                        label={item.title}\n                        key={i}\n                        style={{ width: sidebarWidth }}\n                        ref={\n                          item.url === this.props.router.query.id\n                            ? this.selectedItem\n                            : undefined\n                        }\n                        renderLink={props => {\n                          delete props.href;\n                          if(item.linkType === \"External\") {\n                            return (\n                              <a target=\"_blank\" className=\"spectrum-SideNav-itemLink\" {...createLinkProps(item)}>{item.title}</a>\n                            );\n                          } else {\n                            return (\n                              <Link {...createLinkProps(item)}>\n                                <a {...props}>{item.title}</a>\n                              </Link>\n                            );\n                          }\n                        }}\n                      />\n                    );\n                  } else {\n                    return (\n                      <SideNavItem\n                        value={item.url}\n                        label={item.title}\n                        key={i}\n                        defaultExpanded={item.defaultExpanded}\n                        style={{ width: sidebarWidth }}\n                      >\n                        {item.children &&\n                          item.children.map((childItem, childI) => {\n                            return (\n                              <SideNavItem\n                                value={childItem.url}\n                                label={childItem.title}\n                                key={childI}\n                                style={{ width: sidebarWidth }}\n                                ref={\n                                  childItem.url === this.props.router.query.id\n                                    ? this.selectedItem\n                                    : undefined\n                                }\n                                renderLink={props => {\n                                  delete props.href;\n                                  if(childItem.linkType === \"External\") {\n                                    return (\n                                      <a target=\"_blanks\" {...createLinkProps(childItem)}>{childItem.title}</a>\n                                    );\n                                  } else {\n                                    return (\n                                      <Link {...createLinkProps(childItem)}>\n                                        <a {...props}>{childItem.title}</a>\n                                      </Link>\n                                    );\n                                  }\n                                }}\n                              />\n                            );\n                          })}\n                      </SideNavItem>\n                    );\n                  }\n                })}\n              </SideNav>\n              <SideNav style={{ width: sidebarWidth, marginBottom: \"40px\" }}>\n                <SideNavItem\n                  value=\"Spectrum\"\n                  target=\"_blank\"\n                  href=\"https://spectrum.adobe.com/\"\n                  style={{ width: sidebarWidth }}\n                >\n                  Spectrum\n                </SideNavItem>\n              </SideNav>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nexport default withRouter(Sidebar);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAJA;AAOA;AACA;;;AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAGA;AAIA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;AAjLA;AACA;AAkLA;;;;A","sourceRoot":""}